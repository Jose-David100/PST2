# Generated by Django 3.0.7 on 2022-11-05 15:14

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Encargado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(max_length=10)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('movil', models.CharField(blank=True, max_length=11, null=True)),
                ('direccion', models.TextField()),
                ('correo', models.CharField(blank=True, max_length=50, null=True)),
                ('funcion', models.CharField(choices=[('Administrativo', 'Administrativo'), ('Enfermero', 'Enfermero'), ('Medico', 'Medico'), ('Obrero', 'Obrero')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Establecimiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, unique=True)),
                ('direccion', models.TextField()),
                ('encargado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Encargado')),
            ],
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(max_length=10)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('direccion', models.TextField()),
                ('movil', models.CharField(blank=True, max_length=11, null=True)),
                ('correo', models.CharField(blank=True, max_length=50, null=True)),
                ('ocupacion', models.CharField(choices=[('Administrativo', 'Administrativo'), ('Enfermero', 'Enfermero'), ('Medico', 'Medico'), ('Obrero', 'Obrero')], max_length=50)),
                ('rol_sistema', models.CharField(blank=True, choices=[('Administrador', 'Administrador'), ('Coordinador/a de cuarto frio', 'Coordinador/a de cuarto frio'), ('Coordinador/a de division estrategica', 'Coordinador/a de division estrategica'), ('Transcriptor', 'Transcriptor'), ('Sin acceso', 'Sin acceso')], max_length=50, null=True)),
                ('sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=20)),
                ('status', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Vacunas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('presentacion', models.CharField(max_length=50)),
                ('existencia', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Salida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_salida', models.DateField()),
                ('observacion', models.TextField()),
                ('establecimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Establecimiento')),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Personal')),
            ],
        ),
        migrations.CreateModel(
            name='Reposos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivo_reposo', models.TextField()),
                ('duracion', models.CharField(max_length=50)),
                ('fecha_inicio', models.DateField()),
                ('fecha_ingreso', models.DateField()),
                ('status', models.CharField(choices=[('Aprobado', 'Aprobado'), ('Rechazado', 'Rechazado')], max_length=20)),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Personal')),
            ],
        ),
        migrations.CreateModel(
            name='Ingreso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_ingreso', models.DateField()),
                ('observacion', models.TextField()),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Personal')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleSalida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('salida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Salida')),
                ('vacuna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Vacunas')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleIngreso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lote', models.CharField(max_length=50)),
                ('fecha_vencimiento', models.DateField()),
                ('cantidad_ingreso', models.IntegerField()),
                ('ingreso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Ingreso')),
                ('vacuna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Vacunas')),
            ],
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
